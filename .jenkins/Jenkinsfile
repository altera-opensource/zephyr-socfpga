#!/usr/bin/env groovy
def linuxBuildStageLabel = "Linux-Build-${UUID.randomUUID().toString()}"
def jenkinsSlaveContainerName = 'jnlp'
def jenkinsSlaveImage = 'amr-registry-pre.caas.intel.com/pse-pswe-software-ba/jenkins/jnlp-slave'
def buildNumber = currentBuild.number
def branchName = env.BRANCH_NAME
def targetBranch = 'socfpga_v3.3-rp'
containerImage =''

def cloudName = 'kubernetes_embedded'
def containerName = 'embedded'

pipeline {
    agent {
        node {
        label 'LinuxHost'
        }
    }

    stages {
	    
        stage("Init") {  
            agent {
                kubernetes {
                    cloud cloudName
                    label linuxBuildStageLabel
                    yaml """
                          kind: Pod
                          apiVersion: v1
                          spec:
                            securityContext:
                              runAsUser: 42554
                              runAsGroup: 20927
                              fsGroup: 15902
                            volumes:
                            - name: "sys-gsrd-data"
                              persistentVolumeClaim:
                                claimName: "sys-gsrd-data"
                                readOnly: false
                            - name: "sys-gsrd-home"
                              persistentVolumeClaim:
                                claimName: "sys-gsrd-home"
                                readOnly: false
                            - name: "sys-gsrd-work"
                              persistentVolumeClaim:
                                claimName: "sys-gsrd-work"
                                readOnly: false
                            - name: "swbldarchive2"
                              persistentVolumeClaim:
                                claimName: "swbldarchive2"
                                readOnly: false
                            - name: "swbldreleases1"
                              persistentVolumeClaim:
                                claimName: "swbldreleases1"
                                readOnly: true
                            - name: "etools"
                              persistentVolumeClaim:
                                claimName: "etools"
                                readOnly: true
                            - name: "itoolsubuntu"
                              persistentVolumeClaim:
                                claimName: "itoolsubuntu"
                                readOnly: true
                            - name: "ecnetbatch"
                              persistentVolumeClaim:
                                claimName: "ecnetbatch"
                                readOnly: true
                            - name: "sclocal"
                              persistentVolumeClaim:
                                claimName: "sclocal"
                                readOnly: true
                            - name: "genadm"
                              persistentVolumeClaim:
                                claimName: "genadm"
                                readOnly: true
                            - name: "nbconf"
                              persistentVolumeClaim:
                                claimName: "nbconf"
                                readOnly: true
                            - name: "ctools"
                              persistentVolumeClaim:
                                claimName: "ctools"
                                readOnly: true
                            - name: "swbldreleases5"
                              persistentVolumeClaim:
                                claimName: "swbldreleases5"
                                readOnly: true
                            - name: "flowscommon"
                              persistentVolumeClaim:
                                claimName: "flowscommon"
                                readOnly: true
                            - name: "flowsppe"
                              persistentVolumeClaim:
                                claimName: "flowsppe"
                                readOnly: true
                            - name: "flowssw"
                              persistentVolumeClaim:
                                claimName: "flowssw"
                                readOnly: true
                            - name: "flowshw"
                              persistentVolumeClaim:
                                claimName: "flowshw"
                                readOnly: true
                            - name: "gsrdhome"
                              persistentVolumeClaim:
                                claimName: "gsrdhome"
                                readOnly: false
                            - name: "psgdata"
                              persistentVolumeClaim:
                                claimName: "psgdata"
                                readOnly: false
                            - name: "platvalhub"
                              persistentVolumeClaim:
                                claimName: "platvalhub"
                                readOnly: false
                            - name: "swbldops7"
                              persistentVolumeClaim:
                                claimName: "swbldops7"
                                readOnly: false
                            containers:
                            - name: ${jenkinsSlaveContainerName}
                              image: ${jenkinsSlaveImage}
                              tty: true
                              imagePullPolicy: Always
                            - name: ${containerName}
                              image: 'amr-registry-pre.caas.intel.com/pse-pswe-software-ba/embedded_kw:ubuntu20.04.3-sys-gsrd-15.1'
                              tty: true
                              imagePullPolicy: Always
                              restartPolicy: "Never"
                              resources:
                                  limits:
                                      cpu: "4"
                                      memory: 5Gi
                                  requests:
                                      cpu: "4"
                                      memory: 5Gi
                              volumeMounts:
                              - mountPath: "/nfs/site/disks/psg_data_41"
                                name: "sys-gsrd-data"
                                readOnly: false
                              - mountPath: "/nfs/site/home/sys_gsrd"
                                name: "sys-gsrd-home"
                                readOnly: false
                              - mountPath: "/nfs/sc/disks/swuser_work_sys_gsrd"
                                name: "sys-gsrd-work"
                                readOnly: false
                              - mountPath: "/nfs/site/disks/swbld_releases_1"
                                name: "swbldreleases1"
                                readOnly: true
                              - mountPath: "/nfs/site/disks/psg_ctools_1"
                                name: "ctools"
                                readOnly: true
                              - mountPath: "/nfs/site/disks/swbld_releases_5"
                                name: "swbldreleases5"
                                readOnly: true
                              - mountPath: "/nfs/site/disks/psg_flowscommon_1"
                                name: "flowscommon"
                                readOnly: true
                              - mountPath: "/nfs/sc/disks/psg_flowsppe_1"
                                name: "flowsppe"
                                readOnly: true
                              - mountPath: "/nfs/site/disks/psg_flowssw_1"
                                name: "flowssw"
                                readOnly: true
                              - mountPath: "/nfs/site/disks/psg_flowshw_1"
                                name: "flowshw"
                                readOnly: true
                              - mountPath: "/nfs/site/home/gsrd"
                                name: "gsrdhome"
                                readOnly: false
                              - mountPath: "/nfs/site/disks/psg_data_31"
                                name: "psgdata"
                                readOnly: false
                              - mountPath: "/nfs/sc/disks/swbld_ops_7"
                                name: "swbldops7"
                                readOnly: false
                              - mountPath: "/nfs/sc/disks/psg_lsf_1"
                                name: "nbconf"
                                readOnly: true
                              - mountPath: "/nfs/site/itools"
                                name: "itoolsubuntu"
                                readOnly: true
                              - mountPath: "/nfs/sc/gen/adm"
                                name: "genadm"
                                readOnly: true
                              - mountPath: "/nfs/sc/local"
                                name: "sclocal"
                                readOnly: true
                              - mountPath: "/nfs/sc/disks/ec_netbatch"
                                name: "ecnetbatch"
                                readOnly: true
                              - mountPath: "/nfs/sc/disks/swip_etools_1"
                                name: "etools"
                                readOnly: true
                              - mountPath: "/nfs/site/disks/swbld_archive_2"
                                name: "swbldarchive2"
                                readOnly: true
                              command:
                              - /bin/sh
                              args:
                              - -c
                              - cat
                          """
                }
            }
            steps {
                container(containerName) {
                    script{
                        try {
                            sh """#!/bin/bash -x
                            cd $WORKSPACE
                            git config --add remote.origin.fetch +refs/heads/$targetBranch:refs/remotes/origin/$targetBranch
                            git fetch --force origin
                            git format-patch origin/$targetBranch >patch.txt
                            sh .jenkins/test_checkpatch.sh patch.txt

                            """
                        }
                        catch (Exception e) {
                            error 'checkpatch error'
                            exit -1
                        }
                        try {
                            sh """#!/bin/bash -x
                            cd $WORKSPACE
                            chmod 755 .jenkins/buildable_commits.sh
                            .jenkins/buildable_commits.sh ${buildNumber} ${targetBranch} ${branchName} .jenkins/boards_samples.csv
                            """
                        }
                        catch (Exception e) {
                            error 'unbuildable commits'
                            exit -1
                        }
                        try {
                            sh """#!/bin/bash -x
                            cd $WORKSPACE
                            chmod 755 .jenkins/buildScript_agilex.sh
                            .jenkins/buildScript_agilex.sh ${buildNumber} ${targetBranch}
                            """
                        }
                        catch (Exception e) {
                            error 'Failed to build Agilex'
                            exit -1
                        }

                        try {
                            sh """#!/bin/bash -x
                            cd $WORKSPACE
                            chmod 755 .jenkins/buildScript_niosv-m.sh
                            .jenkins/buildScript_niosv-m.sh ${buildNumber} ${targetBranch}
                             """
                        }
                        catch (Exception e) {
                            error 'Failed to build NIOS-V'
                            exit -1
                        }

                        try {
                            sh """#!/bin/bash -x
                            cd $WORKSPACE
                            chmod 755 .jenkins/buildScript_agilex5.sh
                            .jenkins/buildScript_agilex5.sh ${buildNumber} ${targetBranch}
                            """
                        }
                        catch (Exception e) {
                            error 'Failed to build Agilex5'
                            exit -1
                        }

                        try {
                            sh """#!/bin/bash -x
                            cd $WORKSPACE
                            chmod 755 .jenkins/buildScript_agilex5_simics_vp.sh
                            .jenkins/buildScript_agilex5_simics_vp.sh ${buildNumber} ${targetBranch}
                            """
                        }
                        catch (Exception e) {
                            error 'Failed to build Agilex5 Simics VP'
                            exit -1
                        }
                    }
                }
            }
        }
	stage("Regtest"){
            steps {
                script {
                    build job: "Embedded_CI/zephyr-regtest",  parameters: [string(name: 'JOB_NO_BUILD', value: String.valueOf(BUILD_NUMBER)), string(name: 'GIT_BRANCH_NAME', value: env.BRANCH_NAME)], wait: true
                    build job: "Embedded_CI/zephyr-regtest-sc",  parameters: [string(name: 'JOB_NO_BUILD', value: String.valueOf(BUILD_NUMBER)), string(name: 'GIT_BRANCH_NAME', value: env.BRANCH_NAME)], wait: true
                    build job: "Embedded_CI/zephyr-agilex5-regtest",  parameters: [string(name: 'JOB_NO_BUILD', value: String.valueOf(BUILD_NUMBER)), string(name: 'GIT_BRANCH_NAME', value: env.BRANCH_NAME)], wait: true
                }
            }
        }
    }
}
